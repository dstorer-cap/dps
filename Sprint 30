03/05/2024
- Look through the ip read me on the sddf to see how to test if it is working 
- Port the camkes components over to check if they will work with the current build

07/05/2024
- Estimate how long it will take to port the camkes componenets over to the dev kit
- Work out the connections needed between the protection domains 
- Port the camkes components over

Notes on camkes code
- The security demo uses the picoserver component 
- These are the connections between the picosever and transmitter components 
        /* PicoServer <-> Transmitter connections */
        connection seL4PicoServerSignal eth_server_control(from transmitter.eth_control, to picoserver.pico_control);
        connection seL4PicoServer eth_server_recv(from transmitter.eth_recv, to picoserver.pico_recv);
        connection seL4PicoServer eth_server_send(from transmitter.eth_send, to picoserver.pico_send);
- The case study implements the echo.c file of the picoserver_uboot application in the transmitter.c file 
- transmit_pending_eth_buffer copies the data to the send buffer then instructs picoserver to transmit the data using the eth_send_send function

sddf lwip library description 
- The state struct stores the packets to be sent 
- When transmitting the head part of the struct is set to the buffer that is to be sent

xhci ethernet example
- data_packet memory region is used to store the packet to be sent 
- tcp write is how you send data from the ethernet, it is in the tcp_out.c file of the lwip library

09/05/2024
Functions in transmitter.c
- listen_for_socket() listens for an ethernet port and ip address for the data to be sent over. Are there routines in the sddf for this
- handle_picoserver_notification() sets the socket to send the data packet over when the picosever component notifies that it is ready
- Try writing to the network queue in the transmitter component either using tcp_write or a function in the queue.h interface
- Test running the xhci ethernet example - Tested

13/05/2024
- The example in the xhci driver also transmit data from a usb keyboard so can use this example 
- Try to get same output as xhci example when running the dev kit example 
Porting the example
- Copy the implementation of the ringbuffer over to the dev kit 
- Copy the ethernet and ip stack code over to the dev kit 
- Update the system file to reflect the changes
- Update the cmake file to reflect the changes 

- kmem.h -> don't want netbsd code in the example therefore need to replace this

14/05/2024
- Run the xhci ethernet example to see when the DHCP ip address is printing 
- Work out why it is not being printed on the dev kit example 
- Maybe need to add the ethernet timer in aswell

16/05/2024
- Check if the utilisation_socket and udp socket code is the same as the xhci driver code 
- Work out where the call to netif_status_callback is


