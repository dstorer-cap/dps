10/06/2024
- Check new docker environment works with the case study and xhci stack 
- Read up on the virtualisation (Josh's notes) 

Virtualisation
- A protection domain for each usb device that is plugged in (no communication between each device)
- Route each usb device to a virtualised machine, each linux thinks its is running on a physical machine 
- The usb device driver needs to know which traffic is coming from where and route it to each virtualised machine 
- Detect what the devices are early on (just get it working for a keyboard and a mouse)
- The usb driver can see both devices 

Goal
- Work out which traffic is coming from which device and seperate them out
- Initialise both devices and seperate them out 

12/06/2024
- Test the single picolibc on the maaxboard
- Remove the two instances of dma and test
- Test the new docker environment 
  - Can build in the new docker environement with the auts_microkit_stable package
  - Cannot build with sel4_modern_microkit due to mutliple references of mdelay

13/06/2023
- Do i need to create the wrapper around linux?
- The devices will be initialised in the xhci controller 
- Build and run the xhci driver
- Work out where the initialisation of each device is happening and seperate out the streams 

Build xhci driver
- Need main of sel4-xhci

Notes for building xhci_driver
- Need to initialise the sddf submodule (git submodule update --init --recursive)
